services:
  postgres:
    image: postgres:13
    platform: linux/amd64
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.5
    platform: linux/amd64
    ports:
      - "6379:6379"

  mongo:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    environment:
      AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: 'True'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'your_secret_key'
      AIRFLOW__WEBSERVER__CSRF_ENABLED: 'True'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    ports:
      - "8090:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs  # 컨테이너와 호스트 간에 로그 디렉토리 공유
    command: webserver

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs  # 컨테이너와 호스트 간에 로그 디렉토리 공유
    command: scheduler

  download_osm_data:
    build:
      context: .
      dockerfile: Dockerfile
    command: python /opt/airflow/scripts/download_osm_data.py
    volumes:
      - ./logs:/opt/airflow/logs  # 로그 디렉토리 공유
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
    depends_on:
      - webserver

  convert_osm_to_geojson:
    build:
      context: .
      dockerfile: Dockerfile
    command: python /opt/airflow/scripts/convert_osm_to_geojson.py
    volumes:
      - ./logs:/opt/airflow/logs  # 로그 디렉토리 공유
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
    depends_on:
      - download_osm_data  # download_osm_data가 먼저 실행되어 OSM 데이터를 다운로드한 후 실행되도록 함

  geojson_mongodb:
    build:
      context: .
      dockerfile: Dockerfile
    command: python /opt/airflow/scripts/geojson_mongodb.py
    volumes:
      - ./logs:/opt/airflow/logs  # 로그 디렉토리 공유
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
    depends_on:
      - convert_osm_to_geojson  # convert_osm_to_geojson이 실행된 후 실행되도록 함
      - mongo

  create_map:
    build:
      context: .
      dockerfile: Dockerfile
    command: python /opt/airflow/scripts/create_map.py
    volumes:
      - ./logs:/opt/airflow/logs  # 로그 디렉토리 공유
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
    depends_on:
      - geojson_mongodb  # geojson_mongodb가 실행된 후 실행되도록 함

volumes:
  postgres_data:
  mongo_data:
